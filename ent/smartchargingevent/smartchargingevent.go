// Code generated by ent, DO NOT EDIT.

package smartchargingevent

import (
	"github.com/Kotodian/gokit/datasource"
)

const (
	// Label holds the string label denoting the smartchargingevent type in the database.
	Label = "smart_charging_event"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldVersion holds the string denoting the version field in the database.
	FieldVersion = "version"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedBy holds the string denoting the updated_by field in the database.
	FieldUpdatedBy = "updated_by"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldSmartID holds the string denoting the smart_id field in the database.
	FieldSmartID = "smart_id"
	// FieldEquipmentID holds the string denoting the equipment_id field in the database.
	FieldEquipmentID = "equipment_id"
	// FieldConnectorID holds the string denoting the connector_id field in the database.
	FieldConnectorID = "connector_id"
	// FieldOrderID holds the string denoting the order_id field in the database.
	FieldOrderID = "order_id"
	// FieldUnit holds the string denoting the unit field in the database.
	FieldUnit = "unit"
	// FieldValidFrom holds the string denoting the valid_from field in the database.
	FieldValidFrom = "valid_from"
	// FieldValidTo holds the string denoting the valid_to field in the database.
	FieldValidTo = "valid_to"
	// FieldSpec holds the string denoting the spec field in the database.
	FieldSpec = "spec"
	// Table holds the table name of the smartchargingevent in the database.
	Table = "smart_charging_effect"
)

// Columns holds all SQL columns for smartchargingevent fields.
var Columns = []string{
	FieldID,
	FieldVersion,
	FieldCreatedBy,
	FieldCreatedAt,
	FieldUpdatedBy,
	FieldUpdatedAt,
	FieldSmartID,
	FieldEquipmentID,
	FieldConnectorID,
	FieldOrderID,
	FieldUnit,
	FieldValidFrom,
	FieldValidTo,
	FieldSpec,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultVersion holds the default value on creation for the "version" field.
	DefaultVersion int64
	// DefaultCreatedBy holds the default value on creation for the "created_by" field.
	DefaultCreatedBy datasource.UUID
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt int64
	// DefaultUpdatedBy holds the default value on creation for the "updated_by" field.
	DefaultUpdatedBy datasource.UUID
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt int64
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID datasource.UUID
)
