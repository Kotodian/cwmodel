// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/Kotodian/ent-practice/ent/equipment"
	"github.com/Kotodian/ent-practice/ent/equipmentalarm"
	"github.com/Kotodian/ent-practice/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	equipmentFields := schema.Equipment{}.Fields()
	_ = equipmentFields
	// equipmentDescSn is the schema descriptor for sn field.
	equipmentDescSn := equipmentFields[0].Descriptor()
	// equipment.SnValidator is a validator for the "sn" field. It is called by the builders before save.
	equipment.SnValidator = equipmentDescSn.Validators[0].(func(string) error)
	// equipmentDescSn2 is the schema descriptor for sn2 field.
	equipmentDescSn2 := equipmentFields[1].Descriptor()
	// equipment.Sn2Validator is a validator for the "sn2" field. It is called by the builders before save.
	equipment.Sn2Validator = equipmentDescSn2.Validators[0].(func(string) error)
	equipmentalarmFields := schema.EquipmentAlarm{}.Fields()
	_ = equipmentalarmFields
	// equipmentalarmDescCount is the schema descriptor for count field.
	equipmentalarmDescCount := equipmentalarmFields[4].Descriptor()
	// equipmentalarm.DefaultCount holds the default value on creation for the count field.
	equipmentalarm.DefaultCount = equipmentalarmDescCount.Default.(int)
}
