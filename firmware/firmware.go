// Code generated by ent, DO NOT EDIT.

package firmware

import (
	"github.com/Kotodian/gokit/datasource"
)

const (
	// Label holds the string label denoting the firmware type in the database.
	Label = "firmware"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldVersion holds the string denoting the version field in the database.
	FieldVersion = "version"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedBy holds the string denoting the updated_by field in the database.
	FieldUpdatedBy = "updated_by"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldEquipVersion holds the string denoting the equip_version field in the database.
	FieldEquipVersion = "equip_version"
	// EdgeEquipmentFirmwareEffect holds the string denoting the equipment_firmware_effect edge name in mutations.
	EdgeEquipmentFirmwareEffect = "equipment_firmware_effect"
	// EdgeModel holds the string denoting the model edge name in mutations.
	EdgeModel = "model"
	// EdgeManufacturer holds the string denoting the manufacturer edge name in mutations.
	EdgeManufacturer = "manufacturer"
	// Table holds the table name of the firmware in the database.
	Table = "equip_firmware_template"
	// EquipmentFirmwareEffectTable is the table that holds the equipment_firmware_effect relation/edge.
	EquipmentFirmwareEffectTable = "equip_firmware_effect"
	// EquipmentFirmwareEffectInverseTable is the table name for the EquipmentFirmwareEffect entity.
	// It exists in this package in order to avoid circular dependency with the "equipmentfirmwareeffect" package.
	EquipmentFirmwareEffectInverseTable = "equip_firmware_effect"
	// EquipmentFirmwareEffectColumn is the table column denoting the equipment_firmware_effect relation/edge.
	EquipmentFirmwareEffectColumn = "firmware_id"
	// ModelTable is the table that holds the model relation/edge.
	ModelTable = "equip_firmware_template"
	// ModelInverseTable is the table name for the Model entity.
	// It exists in this package in order to avoid circular dependency with the "model" package.
	ModelInverseTable = "equip_model"
	// ModelColumn is the table column denoting the model relation/edge.
	ModelColumn = "model_id"
	// ManufacturerTable is the table that holds the manufacturer relation/edge.
	ManufacturerTable = "equip_firmware_template"
	// ManufacturerInverseTable is the table name for the Manufacturer entity.
	// It exists in this package in order to avoid circular dependency with the "manufacturer" package.
	ManufacturerInverseTable = "equip_manufacturer"
	// ManufacturerColumn is the table column denoting the manufacturer relation/edge.
	ManufacturerColumn = "manufacturer_id"
)

// Columns holds all SQL columns for firmware fields.
var Columns = []string{
	FieldID,
	FieldVersion,
	FieldCreatedBy,
	FieldCreatedAt,
	FieldUpdatedBy,
	FieldUpdatedAt,
	FieldEquipVersion,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "equip_firmware_template"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"manufacturer_id",
	"model_id",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultVersion holds the default value on creation for the "version" field.
	DefaultVersion int64
	// DefaultCreatedBy holds the default value on creation for the "created_by" field.
	DefaultCreatedBy datasource.UUID
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt int64
	// DefaultUpdatedBy holds the default value on creation for the "updated_by" field.
	DefaultUpdatedBy datasource.UUID
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt int64
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() int64
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID datasource.UUID
)
